&НаСервере
Функция ПолучитьЦенуЛекарстваНаСервере(Лекарство)
    // Создаем запрос для получения цены
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    ЦеныНаЛекарства.Цена
    |ИЗ
    |    Справочник.ЦеныНаЛекарства КАК ЦеныНаЛекарства
    |ГДЕ
    |    ЦеныНаЛекарства.Лекарство = &Лекарство";
    
    Запрос.УстановитьПараметр("Лекарство", Лекарство);
    
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
    
    // Если есть результат, то возвращаем цену
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Цена;
    Иначе
        Возврат 0;
    КонецЕсли;
КонецФункции                 

&НаСервере
Процедура ОбновитьОстаткиНаСервере(ТабличнаяЧасть)
    // Проходим по всем строкам табличной части
    Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
        // Получаем данные из строки
        Лекарство = СтрокаТабличнойЧасти.Лекарство;
        Количество = СтрокаТабличнойЧасти.Количество;
        
        // Обновляем остатки в регистре накопления
        РегистрОстатков = РегистрыНакопления.ОстаткиНаСкладе.СоздатьМенеджерЗаписи();
        РегистрОстатков.Измерения.Лекарство = Лекарство;
        РегистрОстатков.Ресурсы.Количество = Количество;
        РегистрОстатков.Записать();
    КонецЦикла;
КонецПроцедуры

// Сервер
Процедура СписатьПросроченныеЛекарства() Экспорт
    // Получаем текущую дату
    ТекущаяДатаСеанса = ТекущаяДата();
    
    // Запрос для поиска просроченных партий
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ПартииЛекарств.Ссылка КАК Партия,
        |   ПартииЛекарств.Лекарство КАК Лекарство,
        |   ПартииЛекарств.КоличествоОстаток КАК КоличествоОстаток,
        |   ПартииЛекарств.СрокГодности КАК СрокГодности,
        |   ПартииЛекарств.ДатаПоступления КАК ДатаПоступления
        |ИЗ
        |   Справочник.ПартииЛекарств КАК ПартииЛекарств
        |ГДЕ
        |   ПартииЛекарств.ЭтоГруппа = ЛОЖЬ
        |   И ПартииЛекарств.КоличествоОстаток > 0
        |   И ПартииЛекарств.СрокГодности < &ТекущаяДата";
    
    Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса);
    Выборка = Запрос.Выполнить().Выбрать();
    
    // Регистр для записи движений
    НаборЗаписей = РегистрыНакопления.ОстаткиНаСкладе.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.Период.Установить(ТекущаяДатаСеанса);
    НаборЗаписей.Отбор.Регистратор.Установить(Неопределено); // Установим регистратор позже, если нужно
    
    Пока Выборка.Следующий() Цикл
        Если Выборка.КоличествоОстаток <= 0 Тогда
            Продолжить; // Пропускаем, если остаток уже 0
        КонецЕсли;
        
        // Списание из справочника ПартииЛекарств
        ПартияОбъект = Выборка.Партия.ПолучитьОбъект();
        ПартияОбъект.КоличествоОстаток = 0; // Полное списание просроченной партии
        ПартияОбъект.Записать();
        
        // Движение в регистре ОстаткиНаСкладе
        Движение = НаборЗаписей.Добавить();
        Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
        Движение.Период = ТекущаяДатаСеанса;
        Движение.Лекарство = Выборка.Лекарство;
        Движение.Партия = Выборка.Партия;
        Движение.Количество = Выборка.КоличествоОстаток;
        Движение.ДатаПоступления = Выборка.ДатаПоступления;
        Движение.СрокГодности = Выборка.СрокГодности;
        
        // Логирование
        Сообщить("Списана просроченная партия: " + Выборка.Партия + " (Лекарство: " + Выборка.Лекарство + ", Количество: " + Выборка.КоличествоОстаток + ", Срок годности: " + Выборка.СрокГодности + ")");
    КонецЦикла;
    
    // Записываем движения
    Если НаборЗаписей.Количество() > 0 Тогда
        НаборЗаписей.Записать(Ложь); // Ложь - не контролировать остатки, так как это списание
    КонецЕсли;
КонецПроцедуры