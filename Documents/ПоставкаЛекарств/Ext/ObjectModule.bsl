// Модуль объекта документа ПоставкаЛекарств

Процедура ОбработкаПроведения(Отказ, Режим)
    Движения.ОстаткиНаСкладе.Записывать = Истина;
    ТекущаяДата = ТекущаяДата(); // Получаем текущую дату для проверки просроченности
    
    Для Каждого ТекСтрокаПозицииЛекарств Из ПозицииЛекарств Цикл
        // Проверяем остатки по лекарству
        Запрос = Новый Запрос;
        Запрос.Текст = 
            "ВЫБРАТЬ
            |    ОстаткиНаСкладеОстатки.Партия КАК Партия,
            |    ОстаткиНаСкладеОстатки.Лекарство КАК Лекарство,
            |    ОстаткиНаСкладеОстатки.КоличествоОстаток КАК КоличествоОстаток
            |ПОМЕСТИТЬ ВТОстатки
            |ИЗ
            |    РегистрНакопления.ОстаткиНаСкладе.Остатки(&МоментВремени, Лекарство = &Лекарство) КАК ОстаткиНаСкладеОстатки
            |ГДЕ
            |    ОстаткиНаСкладеОстатки.КоличествоОстаток > 0
            |;
            |
            |ВЫБРАТЬ
            |    ВТОстатки.Партия КАК Партия,
            |    ВТОстатки.КоличествоОстаток КАК КоличествоОстаток,
            |    ПартииЛекарств.Дата КАК ДатаПоступления,
            |    ПартииЛекарствСоставПартии.СрокГодности КАК СрокГодности
            |ИЗ
            |    ВТОстатки КАК ВТОстатки
            |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПартииЛекарств.СоставПартии КАК ПартииЛекарствСоставПартии
            |    ПО ВТОстатки.Партия = ПартииЛекарствСоставПартии.Ссылка
            |    И ВТОстатки.Лекарство = ПартииЛекарствСоставПартии.Лекарство
            |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПартииЛекарств КАК ПартииЛекарств
            |    ПО ВТОстатки.Партия = ПартииЛекарств.Ссылка
            |ГДЕ
            |    ПартииЛекарствСоставПартии.СрокГодности >= &ТекущаяДата // Исключаем просроченные партии
            |УПОРЯДОЧИТЬ ПО
            |    ПартииЛекарств.Дата";
        Запрос.УстановитьПараметр("Лекарство", ТекСтрокаПозицииЛекарств.Лекарство);
        Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
        Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата)); // Сравниваем только даты
        Выборка = Запрос.Выполнить().Выбрать();
        
        КоличествоКПродаже = ТекСтрокаПозицииЛекарств.Количество;
        Если Выборка.Количество() = 0 И КоличествоКПродаже > 0 Тогда
            Отказ = Истина;
            Сообщить("Недостаточно доступного остатка для лекарства: " + ТекСтрокаПозицииЛекарств.Лекарство);
            Продолжить;
        КонецЕсли;
        
        Пока Выборка.Следующий() И КоличествоКПродаже > 0 Цикл
            КоличествоСписания = Мин(КоличествоКПродаже, Выборка.КоличествоОстаток);
            
            // Движение по регистру
            Движение = Движения.ОстаткиНаСкладе.Добавить();
            Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
            Движение.Период = Дата;
            Движение.Лекарство = ТекСтрокаПозицииЛекарств.Лекарство;
            Движение.Партия = Выборка.Партия;
            Движение.Количество = КоличествоСписания;
            Движение.ДатаПоступления = Выборка.ДатаПоступления;
            Движение.СрокГодности = Выборка.СрокГодности;
            
            КоличествоКПродаже = КоличествоКПродаже - КоличествоСписания;
        КонецЦикла;
        
        // Проверяем, хватило ли остатка
        Если КоличествоКПродаже > 0 Тогда
            Отказ = Истина;
            Сообщить("Недостаточно доступного остатка для лекарства: " + ТекСтрокаПозицииЛекарств.Лекарство);
        КонецЕсли;
    КонецЦикла;
    
    // Записываем движения только если нет ошибок
    Если Не Отказ Тогда
        Движения.ОстаткиНаСкладе.Записать();
    КонецЕсли;
КонецПроцедуры

Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // Получаем ссылку на документ "СозданиеЗаявки"
    Заявка = ЭтотОбъект.Заявка;
    // Заполняем табличную часть "ПозицииЛекарств" данными из документа "СозданиеЗаявки"
    Для Каждого СтрокаЗаявки Из Заявка.ПозицииЛекарств Цикл
        НоваяСтрока = ЭтотОбъект.ПозицииЛекарств.Добавить();
        НоваяСтрока.Лекарство = СтрокаЗаявки.Лекарство;
        НоваяСтрока.Цена = СтрокаЗаявки.Цена;
        НоваяСтрока.Количество = СтрокаЗаявки.Количество;
        НоваяСтрока.Сумма = СтрокаЗаявки.Сумма;
    КонецЦикла;
КонецПроцедуры