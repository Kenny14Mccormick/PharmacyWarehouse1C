// Модуль формы списка документа СписаниеПросрочки

// Клиентская часть: обработка команды
&НаКлиенте
Процедура СписатьПросрочку(Команда)
    Успешно = Ложь;
    СписатьПросроченныеЛекарстваНаСервере(Успешно);
    
    // Обновляем список, если списание прошло успешно
    Если Успешно Тогда
        Элементы.Список.Обновить();
    КонецЕсли;
КонецПроцедуры

// Серверная часть: логика списания
&НаСервере
Процедура СписатьПросроченныеЛекарстваНаСервере(Успешно)
    ТекущаяДатаСеанса = ТекущаяДата();
    
    // Запрос для поиска просроченных партий
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ПартииЛекарств.Ссылка КАК Партия,
        |   ПартииЛекарств.Лекарство КАК Лекарство,
        |   ПартииЛекарств.КоличествоОстаток КАК КоличествоОстаток,
        |   ПартииЛекарств.СрокГодности КАК СрокГодности,
        |   ПартииЛекарств.ДатаПоступления КАК ДатаПоступления
        |ИЗ
        |   Справочник.ПартииЛекарств КАК ПартииЛекарств
        |ГДЕ
        |   ПартииЛекарств.ЭтоГруппа = ЛОЖЬ
        |   И ПартииЛекарств.КоличествоОстаток > 0
        |   И ПартииЛекарств.СрокГодности < &ТекущаяДата";
    
    Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса);
    Выборка = Запрос.Выполнить().Выбрать();
    
    // Создаём документ СписаниеПросрочки
    ДокументСписание = Документы.СписаниеПросрочки.СоздатьДокумент();
    ДокументСписание.Дата = ТекущаяДатаСеанса;
    
    КоличествоСписано = 0;
    
    // Начинаем транзакцию
    НачатьТранзакцию();
    Попытка
        // Обрабатываем каждую просроченную партию
        Пока Выборка.Следующий() Цикл
            Если Выборка.КоличествоОстаток <= 0 Тогда
                Продолжить;
            КонецЕсли;
            
            // Блокируем данные
            Блокировка = Новый БлокировкаДанных;
            ЭлементБлокировки = Блокировка.Добавить("Справочник.ПартииЛекарств");
            ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Партия);
            Блокировка.Заблокировать();
            
            // Добавляем строку в табличную часть документа
            НоваяСтрока = ДокументСписание.ПросроченныеПартии.Добавить();
            НоваяСтрока.Партия = Выборка.Партия;
            НоваяСтрока.Лекарство = Выборка.Лекарство;
            НоваяСтрока.Количество = Выборка.КоличествоОстаток;
            НоваяСтрока.СрокГодности = Выборка.СрокГодности;
            
            // Обновляем остаток в справочнике
            ПартияОбъект = Выборка.Партия.ПолучитьОбъект();
            ПартияОбъект.КоличествоОстаток = 0;
            ПартияОбъект.Записать();
            
            КоличествоСписано = КоличествоСписано + Выборка.КоличествоОстаток;
            Сообщить("Списана просроченная партия: " + Выборка.Партия + " (Лекарство: " + Выборка.Лекарство + ", Количество: " + Выборка.КоличествоОстаток + ", Срок годности: " + Выборка.СрокГодности + ")", СтатусСообщения.Информация);
        КонецЦикла;
        
        // Проверяем и записываем документ
        Если ДокументСписание.ПросроченныеПартии.Количество() > 0 Тогда
            ДокументСписание.Записать(РежимЗаписиДокумента.Проведение);
            Сообщить("Документ списания успешно проведён.", СтатусСообщения.Информация);
            Успешно = Истина; // Устанавливаем флаг успешного выполнения
        КонецЕсли;
        
        // Фиксируем транзакцию
        ЗафиксироватьТранзакцию();
    Исключение
        // Откат транзакции при ошибке
        Если ТранзакцияАктивна() Тогда
            ОтменитьТранзакцию();
            // Восстанавливаем остатки в справочнике
            Выборка.Сбросить();
            Пока Выборка.Следующий() Цикл
                ПартияОбъект = Выборка.Партия.ПолучитьОбъект();
                ПартияОбъект.КоличествоОстаток = Выборка.КоличествоОстаток; // Восстанавливаем остаток
                ПартияОбъект.Записать();
            КонецЦикла;
        КонецЕсли;
        Сообщить("Ошибка при обработке: " + ОписаниеОшибки(), СтатусСообщения.Важное);
        Успешно = Ложь; // Устанавливаем флаг неуспешного выполнения
        Возврат;
    КонецПопытки;
    
    // Выводим результат
    Если КоличествоСписано = 0 Тогда
        Сообщить("Просроченных лекарств не найдено.", СтатусСообщения.Информация);
    Иначе
        Сообщить("Списание завершено. Всего списано: " + КоличествоСписано + " единиц.", СтатусСообщения.Информация);
    КонецЕсли;
КонецПроцедуры