&НаКлиенте
Процедура ПозицииЛекарствЛекарствоПриИзменении(Элемент)
    ТекущиеДанныеСтрока = Элементы.ПозицииЛекарств.ТекущиеДанные;
    
    // Проверяем, выбрано ли лекарство
    Если ЗначениеЗаполнено(ТекущиеДанныеСтрока.Лекарство) Тогда
        // Получаем количество на складе
        КоличествоНаСкладе = ПолучитьКоличествоНаСкладе(ТекущиеДанныеСтрока.Лекарство, Объект.Дата);
		
        // Если количество меньше 15, выводим сообщение и очищаем поле
        Если КоличествоНаСкладе < 15 Тогда
            Сообщить("Лекарство " + ТекущиеДанныеСтрока.Лекарство + " отсутствует в достаточном количестве на складе. Остаток: " + КоличествоНаСкладе, СтатусСообщения.Важное);
            ТекущиеДанныеСтрока.Лекарство = ПредопределенноеЗначение("Справочник.Лекарства.ПустаяСсылка");
            ТекущиеДанныеСтрока.Цена = 0;
            ТекущиеДанныеСтрока.Сумма = 0;
            Возврат;
        КонецЕсли;
        
        // Если лекарство доступно, получаем цену
        Цена = ВернутьЦенуЛекарства(ТекущиеДанныеСтрока.Лекарство, Объект.Дата);
        ТекущиеДанныеСтрока.Цена = Цена;
        // Сумму пересчитываем только если количество указано
        Если ТекущиеДанныеСтрока.Количество > 0 Тогда
            ТекущиеДанныеСтрока.Сумма = Цена * ТекущиеДанныеСтрока.Количество;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры


&НаСервере
Функция ВернутьЦенуЛекарства(Лекарство, Дата)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ЦеныНаЛекарстваСрезПоследних.Цена КАК Цена
        |ИЗ
        |   РегистрСведений.ЦеныНаЛекарства.СрезПоследних(&Дата, Лекарство = &Лекарство) КАК ЦеныНаЛекарстваСрезПоследних";
    
    Запрос.УстановитьПараметр("Дата", Дата);
    Запрос.УстановитьПараметр("Лекарство", Лекарство);
    
    Выборка = Запрос.Выполнить().Выбрать();
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Цена;
    Иначе
        Сообщить("Не удалось определить цену для лекарства " + Лекарство + " на дату " + Дата, СтатусСообщения.Важное);
        Возврат 0;
    КонецЕсли;
КонецФункции


&НаСервере
Функция ПолучитьКоличествоНаСкладе(Лекарство, МоментВремени)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ОстаткиНаСкладеОстатки.КоличествоОстаток КАК Количество
        |ИЗ
        |	РегистрНакопления.ОстаткиНаСкладе.Остатки(&МоментВремени, Лекарство = &Лекарство) КАК ОстаткиНаСкладеОстатки";
    Запрос.УстановитьПараметр("Лекарство", Лекарство);
    Запрос.УстановитьПараметр("МоментВремени", МоментВремени);
    
    Выборка = Запрос.Выполнить().Выбрать();
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Количество;
    КонецЕсли;
    
    Возврат 0;
КонецФункции


&НаКлиенте
Процедура ПозицииЛекарствКоличествоПриИзменении(Элемент)
    ТекущиеДанныеСтрока = Элементы.ПозицииЛекарств.ТекущиеДанные;
    
    Если ТекущиеДанныеСтрока.Количество < 0 Тогда
        Сообщить("Количество не может быть отрицательным!", СтатусСообщения.Важное);
        ТекущиеДанныеСтрока.Количество = 0;
        ТекущиеДанныеСтрока.Сумма = 0;
        Возврат;
    КонецЕсли;
    
    КоличествоНаСкладе = ПолучитьКоличествоНаСкладе(ТекущиеДанныеСтрока.Лекарство, Объект.Дата);
    Если ТекущиеДанныеСтрока.Количество > КоличествоНаСкладе Тогда
        Сообщить("Нельзя заказать больше " + КоличествоНаСкладе + " единиц данного лекарства.", СтатусСообщения.Обычное);
        ТекущиеДанныеСтрока.Количество = КоличествоНаСкладе;
    КонецЕсли;
    
    ТекущиеДанныеСтрока.Сумма = ТекущиеДанныеСтрока.Цена * ТекущиеДанныеСтрока.Количество;
КонецПроцедуры


&НаКлиенте
Процедура ПоставкаЛекарств(Кнопка)
    Попытка
        // Сбрасываем модифицируемость формы перед вызовом серверной процедуры
        ЭтаФорма.Модифицированность = Ложь;
        
        // Вызов серверной процедуры и получение результата
        Результат = ПоставкаЛекарствНаСервере(Объект.Ссылка);   
        
        Если Результат <> Неопределено Тогда
            // Если есть результат (ошибка), выводим сообщение
            Сообщить(Результат, СтатусСообщения.Важное);
        Иначе
            // Если все успешно, выводим сообщение об успехе
            Сообщить("Заявка успешно выполнена", СтатусСообщения.Обычное);
            ОбновитьИнтерфейс();
            ЭтаФорма.Закрыть();
        КонецЕсли;
    Исключение
        // Обработка исключений, если они возникли
        Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
        ЭтаФорма.Модифицированность = Ложь; // Сбрасываем модифицируемость в случае ошибки
    КонецПопытки;
КонецПроцедуры


&НаСервере
Функция ПоставкаЛекарствНаСервере(СсылкаНаЗаявку)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   СозданиеЗаявки.Ссылка КАК Ссылка,
        |   СозданиеЗаявки.Аптека КАК Аптека,
        |   СозданиеЗаявки.Выполнена КАК Выполнена
        |ИЗ
        |   Документ.СозданиеЗаявки КАК СозданиеЗаявки
        |ГДЕ
        |   СозданиеЗаявки.Ссылка = &СсылкаНаЗаявку";
    
    Запрос.УстановитьПараметр("СсылкаНаЗаявку", СсылкаНаЗаявку);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    Если Не РезультатЗапроса.Пустой() Тогда
        Выборка = РезультатЗапроса.Выбрать();
        Если Выборка.Следующий() Тогда
            Заявка = Выборка.Ссылка; 
            Аптека = Выборка.Аптека;
            Выполнена = Выборка.Выполнена;
        КонецЕсли;
    Иначе
        Возврат "Документ не найден.";
    КонецЕсли;
    
    Если Выполнена Тогда
        Возврат "Заявка уже выполнена. Создание новой поставки запрещено.";
    КонецЕсли;
    
    ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
    Провизор = ТекущийПользователь.ПолноеИмя;
    
    Для Каждого СтрокаЗаявки Из Заявка.ПозицииЛекарств Цикл
        Если СтрокаЗаявки.Сумма = 0 Тогда
            Возврат "Сумма для " + СтрокаЗаявки.Лекарство.Наименование + " равна 0. Проверьте цену.";
        КонецЕсли;
        КоличествоНаСкладе = ПолучитьКоличествоНаСкладе(СтрокаЗаявки.Лекарство, ТекущаяДата());
        Если СтрокаЗаявки.Количество > КоличествоНаСкладе Тогда
            Возврат "Недостаточно " + СтрокаЗаявки.Лекарство.Наименование + " на складе. Доступно: " + КоличествоНаСкладе + " единиц.";
        КонецЕсли;
    КонецЦикла;
    
    ДокументПоставка = Документы.ПоставкаЛекарств.СоздатьДокумент();
    ДокументПоставка.Заявка = Заявка;   
    ДокументПоставка.Аптека = Аптека;           
    ДокументПоставка.Провизор = Провизор; 
    ДокументПоставка.Дата = ТекущаяДата();
    
    Для Каждого СтрокаЗаявки Из Заявка.ПозицииЛекарств Цикл
        НоваяСтрока = ДокументПоставка.ПозицииЛекарств.Добавить();
        НоваяСтрока.Лекарство = СтрокаЗаявки.Лекарство;
        НоваяСтрока.Цена = СтрокаЗаявки.Цена;
        НоваяСтрока.Количество = СтрокаЗаявки.Количество;
        НоваяСтрока.Сумма = СтрокаЗаявки.Сумма;
    КонецЦикла;
    
    ДокументПоставка.Записать(РежимЗаписиДокумента.Проведение);
    
    ЗаявкаОбъект = Заявка.ПолучитьОбъект();
    ЗаявкаОбъект.Выполнена = Истина;
    ЗаявкаОбъект.Записать();
    
    Возврат Неопределено;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // Проверяем, если поле "Аптека" уже заполнено, то ничего не делаем
    Если Не ЗначениеЗаполнено(Объект.Аптека) Тогда
        // Получаем текущего пользователя
        ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
        ЛогинПользователя = ТекущийПользователь.Имя;

        // Создаем запрос для поиска аптеки по логину пользователя
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   Аптеки.Ссылка КАК Ссылка
        |ИЗ
        |   Справочник.Аптеки КАК Аптеки
        |ГДЕ
        |   Аптеки.Код_Аптеки = &КодАптеки";

        Запрос.УстановитьПараметр("КодАптеки", ЛогинПользователя);

        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();
        
        Если Выборка.Следующий() Тогда
            Объект.Аптека = Выборка.Ссылка;
        КонецЕсли;
	КонецЕсли;     
	
КонецПроцедуры       

